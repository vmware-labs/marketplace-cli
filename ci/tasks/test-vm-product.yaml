# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause

---
platform: linux

params:
  CSP_API_TOKEN: ((marketplace_api_token))
  MARKETPLACE_ENV:
  PRODUCT_SLUG:
  MKPCLI_DEBUG: true
  MKPCLI_DEBUG_REQUEST_PAYLOADS: true

inputs:
  - name: version
  - name: vm

run:
  path: bash
  args:
    - -exc
    - |
      set -ex
      VERSION=$(cat version/version)
      VM_FILE=$(find vm -type f -name '*.iso' -or -name '*.ova')

      # Attach a virtual machine file
      mkpcli attach vm --product "${PRODUCT_SLUG}" --product-version "${VERSION}" --create-version \
        --file "${VM_FILE}"

      # Get the list of vms
      mkpcli product list-assets --product "${PRODUCT_SLUG}" --product-version "${VERSION}"

      # Wait until the image is downloadable
      vmName=$(basename "${VM_FILE}")
      asset=$(mkpcli product list-assets --type vm --product "${PRODUCT_SLUG}" --product-version "${VERSION}" --output json | jq --arg name "${vmName}" '.[] | select(.displayname == $name)')
      while [ "$(echo "${asset}" | jq .downloadable)" == "false" ]
      do
        if [ "$(echo "${asset}" | jq .error)" != "null" ]; then
          exit 1
        fi

        sleep 30
        asset=$(mkpcli product list-assets --type vm --product "${PRODUCT_SLUG}" --product-version "${VERSION}" --output json | jq --arg name "${vmName}" '.[] | select(.displayname == $name)')
      done
