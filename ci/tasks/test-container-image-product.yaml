# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause

---
platform: linux

params:
  CSP_API_TOKEN: ((marketplace_api_token))
  MARKETPLACE_ENV:
  PRODUCT_SLUG:
  TEST_IMAGE_REPO:
  TEST_IMAGE_TAG:
  TEST_IMAGE_FILE:
  MKPCLI_DEBUG: true
  MKPCLI_DEBUG_REQUEST_PAYLOADS: true

inputs:
  - name: version
  - name: test-container-image

run:
  path: bash
  args:
    - -exc
    - |
      set -ex
      VERSION=$(cat version/version)

      if [ -z "${TEST_IMAGE_FILE}" ]; then
        # Attach a public container image
        mkpcli attach image --product "${PRODUCT_SLUG}" --product-version "${VERSION}" --create-version \
          --image-repository "${TEST_IMAGE_REPO}" --tag "${TEST_IMAGE_TAG}" --tag-type FIXED \
          --instructions "docker run ${TEST_IMAGE_REPO}:${TEST_IMAGE_TAG}"
      else
        # Attach a local container image
        mkpcli attach image --product "${PRODUCT_SLUG}" --product-version "${VERSION}" --create-version \
          --image-repository "${TEST_IMAGE_REPO}" --file "${TEST_IMAGE_FILE}" \
          --tag "${TEST_IMAGE_TAG}" --tag-type FIXED \
          --instructions "docker run ${TEST_IMAGE_REPO}:${TEST_IMAGE_TAG}"
      fi

      # Also attach a meta file
      mkpcli attach metafile --product "${PRODUCT_SLUG}" --product-version "${VERSION}" \
        --metafile $(which ls) --metafile-type cli --metafile-version 1.0.0

      # Get the list of container images
      mkpcli product list-assets --type image --product "${PRODUCT_SLUG}" --product-version "${VERSION}" | grep "${TEST_IMAGE_REPO}:${TEST_IMAGE_TAG}"
