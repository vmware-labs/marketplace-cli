# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause

---
resource_types:
  # Re-define github-release to use a newer version to fix a known issue
  - name: github-release
    type: registry-image
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/github-release-resource
      tag: 1.6.4
      username: ((harbor.username))
      password: ((harbor.token))

  - name: helm-chart
    type: registry-image
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/jghiloni/helm-chart-resource
      tag: 1.0.0
      username: ((harbor.username))
      password: ((harbor.token))

  - name: pull-request
    type: registry-image
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/teliaoss/github-pr-resource
      tag: v0.23.0
      username: ((harbor.username))
      password: ((harbor.token))

  - name: slack-alert
    type: registry-image
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/arbourd/concourse-slack-alert-resource
      tag: v0.15.0
      username: ((harbor.username))
      password: ((harbor.token))

resources:
  - name: source
    type: git
    icon: github
    source:
      uri: git@github.com:vmware-labs/marketplace-cli.git
      private_key: ((github.private_key))
      branch: main

  - name: pull-requests
    type: pull-request
    icon: github
    check_every: 1m
    source:
      repository: vmware-labs/marketplace-cli
      access_token: ((github.access_token))

  - name: version
    type: semver
    icon: github
    source:
      driver: git
      uri: git@github.com:vmware-labs/marketplace-cli.git
      private_key: ((github.private_key))
      branch: main
      file: version
      commit_message: "[ci skip] bump version to %version%"

  - name: mkpcli
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/tanzu_isv_engineering/mkpcli
      username: ((harbor.username))
      password: ((harbor.token))

  - name: mkpcli-public
    type: registry-image
    icon: docker
    source:
      repository: projects.registry.vmware.com/tanzu_isv_engineering/mkpcli
      username: ((harbor-public.username))
      password: ((harbor-public.token))

  - name: release
    type: github-release
    icon: github
    source:
      owner: vmware-labs
      repository: marketplace-cli
      access_token: ((github.access_token))

  - name: test-container-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-container-product-version
      commit_message: "[ci skip] Updating test container product to version %version%"

  - name: test-chart-source
    type: git
    icon: gitlab
    source:
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-helm-product-for-marketplace-cli.git
      private_key: ((gitlab.private_key))
      branch: main

  - name: test-chart-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-helm-product-for-marketplace-cli.git
      private_key: ((gitlab.private_key))
      branch: main
      file: version
      commit_message: "[ci skip] Updating version file to %version%"

  - name: test-chart
    type: helm-chart
    icon: ship-wheel
    source:
      repository_url: https://projects.registry.vmware.com/chartrepo/tanzu_isv_engineering
      chart: test-chart
      username: ((harbor-public.username))
      password: ((harbor-public.token))

  - name: test-iso-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-iso-product-version
      commit_message: "[ci skip] Updating test iso product to version %version%"

  - name: test-ova-product-version
    type: semver
    icon: gitlab
    source:
      driver: git
      uri: git@gitlab.eng.vmware.com:marketplace-partner-eng/test-products.git
      private_key: ((gitlab.private_key))
      branch: master
      file: test-ova-product-version
      commit_message: "[ci skip] Updating test ova product to version %version%"

  - name: daily
    type: time
    icon: clock-outline
    source:
      start: 5:00 AM
      stop: 6:00 PM
      location: US/Central

  - name: slack
    type: slack-alert
    icon: slack
    source:
      url: ((marketplace-cli-ci-cd-notifier-slack-webhook-url))
      channel: marketplace-cli-developers

jobs:
  - name: test
    plan:
      - get: daily
        trigger: true
      - get: source
        trigger: true
      - task: run-tests
        file: source/ci/tasks/test.yaml
        params:
          CSP_API_TOKEN: ((marketplace_api_token))
          MARKETPLACE_ENV: staging
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-pull-request
    serial: true
    plan:
      - in_parallel:
          - get: version
          - get: source
            resource: pull-requests
            trigger: true
            version: every
            params:
              integration_tool: rebase
            on_success:
              put: pull-requests
              inputs: detect
              params:
                path: source
                status: pending
            on_failure:
              put: pull-requests
              inputs: detect
              params:
                path: source
                context: merge-conflict
                status: failure
      - task: run-tests
        file: source/ci/tasks/test.yaml
        params:
          CSP_API_TOKEN: ((marketplace_api_token))
          MARKETPLACE_ENV: staging
        on_failure:
          put: pull-requests
          inputs: detect
          params:
            path: source
            status: failure
      - put: pull-requests
        inputs: detect
        params:
          path: source
          status: success

  - name: build
    serial_groups: [ version ]
    plan:
      - in_parallel:
          - get: source
            passed:
              - test
            trigger: true
          - get: version
            params:
              pre: rc
      - task: make-args-file
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/ubuntu
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: version
          outputs:
            - name: args-file
          run:
            path: bash
            args:
              - -exc
              - |
                echo "VERSION=$(cat version/version)" > args-file/args.env
      - task: build-image
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/oci-build-task
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: args-file
            - name: source
              path: .
          outputs:
            - name: image
          params:
            BUILD_ARGS_FILE: args-file/args.env
          run:
            path: build
      - put: mkpcli
        inputs: [ image, version ]
        params:
          image: image/image.tar
          additional_tags: version/version  # Update the parameter list if/when concourse is updated
      - put: version
        inputs: detect
        params:
          file: version/version
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

#  - name: bump-major-version
#    serial_groups: [version]
#    plan:
#      - put: version
#        inputs: detect
#        params:
#          bump: major

  - name: bump-minor-version
    serial_groups: [version]
    plan:
      - put: version
        inputs: detect
        params:
          bump: minor

  - name: test-publish-container-product
    public: true
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: test-container-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: get-current-product
        image: mkpcli
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
        file: source/ci/tasks/get-current-product.yaml
        output_mapping: {output: previous}
      - task: add-container-image-to-existing-version
        image: mkpcli
        file: source/ci/tasks/test-container-image-product.yaml
        input_mapping: { version: previous }
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
          TEST_IMAGE_REPO: bitnami/nginx
          TEST_IMAGE_TAG: 1.21.6
      - task: add-version-to-marketplace
        image: mkpcli
        file: source/ci/tasks/add-version.yaml
        input_mapping: {version: test-container-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
      - put: test-container-product-version
        inputs: detect
        params:
          file: test-container-product-version/version
      - task: add-container-image-to-marketplace
        image: mkpcli
        file: source/ci/tasks/test-container-image-product.yaml
        input_mapping: {version: test-container-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
          TEST_IMAGE_REPO: bitnami/nginx
          TEST_IMAGE_TAG: 1.21.1
      - task: set-osl
        image: mkpcli
        file: source/ci/tasks/set-osl-file.yaml
        input_mapping: {version: test-container-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
      - task: download-attached-container-image
        image: mkpcli
        file: source/ci/tasks/download-container-image.yaml
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-container-product-41
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-download-container-product
    public: true
    plan:
      - in_parallel:
        - get: mkpcli
          trigger: true
          passed: [build]
        - get: source
          passed: [build]
        - get: version
          passed: [build]
      - task: download-container-image
        image: mkpcli
        file: source/ci/tasks/download-container-image.yaml
        params:
          MARKETPLACE_ENV: production
          PRODUCT_SLUG: vmware-tanzu-rabbitmq1
          PRODUCT_VERSION: 1.0.0
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: update-test-chart
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: test-chart-product-version
            params: { bump: patch }
          - get: test-chart-source
          - get: mkpcli
            trigger: true
            passed: [ build ]
          - get: mkpcli_source
            resource: source
            passed: [ build ]
          - get: version
            passed: [ build ]
      - task: set-chart-version
        file: test-chart-source/ci/tasks/set-version.yaml
        input_mapping:
          source: test-chart-source
          version: test-chart-product-version
      - task: commit-chart-version
        file: test-chart-source/ci/tasks/commit-version.yaml
        input_mapping:
          version: test-chart-product-version
      - put: test-chart-source
        inputs: detect
        params:
          repository: source
      - put: test-chart
        inputs: detect
        params:
          repository: source/test-chart
      - put: test-chart-product-version
        inputs: detect

  - name: test-publish-chart-product
    public: true
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: test-chart-product-version
            passed: [ update-test-chart ]
          - get: test-chart
#            trigger: true
            passed: [ update-test-chart ]
          - get: mkpcli
            passed: [ update-test-chart ]
          - get: source
            passed: [ update-test-chart ]
          - get: version
            passed: [ update-test-chart ]
      - task: get-current-product
        image: mkpcli
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-chart-product-42
        file: source/ci/tasks/get-current-product.yaml
        output_mapping: {output: previous}
      - task: add-version-to-marketplace
        image: mkpcli
        file: source/ci/tasks/add-version.yaml
        input_mapping: {version: test-chart-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-chart-product-42
      - task: add-chart-to-marketplace
        image: mkpcli
        file: source/ci/tasks/test-chart-product.yaml
        input_mapping:
          chart: test-chart
          version: test-chart-product-version
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-chart-product-42
      - task: set-osl
        image: mkpcli
        file: source/ci/tasks/set-osl-file.yaml
        input_mapping: {version: test-chart-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-chart-product-42
      - task: download-attached-chart
        image: mkpcli
        file: source/ci/tasks/download-chart.yaml
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-chart-product-42
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-download-chart-product
    public: true
    plan:
      - in_parallel:
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: download-chart
        image: mkpcli
        file: source/ci/tasks/download-chart.yaml
        params:
          MARKETPLACE_ENV: production
          PRODUCT_SLUG: nginx
          PRODUCT_VERSION: 1.21.3_0
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-publish-iso-product
    public: true
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: test-iso-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: download-iso
        image: mkpcli
        config:
          platform: linux
          outputs:
            - name: vm
          run:
            path: curl
            dir: vm
            args: [ -O, https://packages.vmware.com/photon/4.0/GA/iso/photon-minimal-4.0-1526e30ba.iso ]
      - task: get-current-product
        image: mkpcli
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-iso-product1
        file: source/ci/tasks/get-current-product.yaml
        output_mapping: {output: previous}
      - task: add-version-to-marketplace
        image: mkpcli
        file: source/ci/tasks/add-version.yaml
        input_mapping: {version: test-iso-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-iso-product1
      - put: test-iso-product-version
        inputs: detect
        params:
          file: test-iso-product-version/version
      - task: add-iso-to-marketplace
        image: mkpcli
        file: source/ci/tasks/test-vm-product.yaml
        input_mapping: {version: test-iso-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-iso-product1
      - task: set-osl
        image: mkpcli
        file: source/ci/tasks/set-osl-file.yaml
        input_mapping: {version: test-iso-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-iso-product1
      - task: download-attached-file
        image: mkpcli
        file: source/ci/tasks/download-vm.yaml
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-iso-product1
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-download-iso-product
    public: true
    plan:
      - in_parallel:
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: download-iso
        image: mkpcli
        file: source/ci/tasks/download-vm.yaml
        params:
          MARKETPLACE_ENV: production
          PRODUCT_SLUG: veeam-backup-and-replication-version-111
          PRODUCT_VERSION: 11
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-publish-ova-product
    public: true
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: test-ova-product-version
            params: { bump: patch }
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: download-ova
        image: mkpcli
        config:
          platform: linux
          outputs:
            - name: vm
          run:
            path: curl
            dir: vm
            args: [ -O, https://packages.vmware.com/photon/4.0/GA/ova/photon-hw13-uefi-4.0-1526e30ba0.ova ]
      - task: get-current-product
        image: mkpcli
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-ova-product-201
        file: source/ci/tasks/get-current-product.yaml
        output_mapping: {output: previous}
      - task: add-version-to-marketplace
        image: mkpcli
        file: source/ci/tasks/add-version.yaml
        input_mapping: {version: test-ova-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-ova-product-201
      - put: test-ova-product-version
        inputs: detect
        params:
          file: test-ova-product-version/version
      - task: add-ova-to-marketplace
        image: mkpcli
        file: source/ci/tasks/test-vm-product.yaml
        input_mapping: {version: test-ova-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-ova-product-201
      - task: set-osl
        image: mkpcli
        file: source/ci/tasks/set-osl-file.yaml
        input_mapping: {version: test-ova-product-version}
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-ova-product-201
      - task: download-attached-file
        image: mkpcli
        file: source/ci/tasks/download-vm.yaml
        params:
          MARKETPLACE_ENV: staging
          PRODUCT_SLUG: test-ova-product-201
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: test-download-ova-product
    public: true
    plan:
      - in_parallel:
          - get: mkpcli
            trigger: true
            passed: [build]
          - get: source
            passed: [build]
          - get: version
            passed: [build]
      - task: download-ova
        image: mkpcli
        file: source/ci/tasks/download-vm.yaml
        params:
          MARKETPLACE_ENV: production
          PRODUCT_SLUG: nginxstack
          PRODUCT_VERSION: 1.21.3_1
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed

  - name: declare-tests-complete
    plan:
      - in_parallel:
        - get: source
          trigger: true
          passed:
            - test-publish-chart-product
            - test-publish-container-product
            - test-publish-iso-product
            - test-publish-ova-product
            - test-download-chart-product
            - test-download-container-product
            - test-download-iso-product
            - test-download-ova-product
        - get: version
          passed:
            - test-publish-chart-product
            - test-publish-container-product
            - test-publish-iso-product
            - test-publish-ova-product
            - test-download-chart-product
            - test-download-container-product
            - test-download-iso-product
            - test-download-ova-product
        - get: release
      - task: make-notes
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/golang
              tag: 1.17
              username: ((harbor.username))
              password: ((harbor.token))
          inputs:
            - name: release
            - name: source
            - name: version
          outputs:
            - name: message
          run:
            path: bash
            dir: source
            args:
              - -exc
              - |
                VERSION=$(cat ../version/version)
                CHANGES=$(git log $(cat ../release/tag)..HEAD --oneline | grep -v "\[ci skip\] bump version")
                echo "All tests passed for mkpcli ${VERSION}." > ../message/message.txt
                echo "Changes include:" >> ../message/message.txt
                echo "${CHANGES}" >> ../message/message.txt
      - put: slack
        params:
          text_file: message/message.txt

  - name: release
    serial_groups: [ version ]
    plan:
      - in_parallel:
        - get: source
          passed:
            - declare-tests-complete
        - get: version
          passed:
            - declare-tests-complete
          params:
            bump: final
      - in_parallel:
        - task: build-cli
          file: source/ci/tasks/build.yaml
        - do:
          - task: make-args-file
            config:
              platform: linux
              image_resource:
                type: registry-image
                source:
                  repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/ubuntu
                  username: ((harbor.username))
                  password: ((harbor.token))
              inputs:
                - name: version
              outputs:
                - name: args-file
              run:
                path: bash
                args:
                  - -exc
                  - |
                    echo "VERSION=$(cat version/version)" > args-file/args.env
          - task: build-image
            privileged: true
            config:
              platform: linux
              image_resource:
                type: registry-image
                source:
                  repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/oci-build-task
                  username: ((harbor.username))
                  password: ((harbor.token))
              inputs:
                - name: args-file
                - name: source
                  path: .
              outputs:
                - name: image
              params:
                BUILD_ARGS_FILE: args-file/args.env
              run:
                path: build
        - do:
          - get: release
          - task: make-release-notes
            config:
              platform: linux
              image_resource:
                type: registry-image
                source:
                  repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/golang
                  tag: 1.17
                  username: ((harbor.username))
                  password: ((harbor.token))
              inputs:
                - name: release
                - name: source
              outputs:
                - name: release-notes
              run:
                path: bash
                dir: source
                args:
                  - -exc
                  - |
                    git log $(cat ../release/tag)..HEAD --oneline | grep -v "\[ci skip\] bump version" > ../release-notes/notes.txt
      - put: mkpcli-public
        params:
          image: image/image.tar
          additional_tags: version/version
      - put: release
        inputs: [ build, source, version, release-notes ]
        params:
          name: version/version
          tag: version/version
          tag_prefix: v
          commitish: source/.git/ref
          body: release-notes/notes.txt
          globs:
            - build/*
      - put: version
        params:
          bump: patch
    on_error:
      put: slack
      params:
        alert_type: errored
    on_failure:
      put: slack
      params:
        alert_type: failed
